package managecoffeechain;

import utils.Utils;
import models.Product;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import services.ProductService;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author thangphan
 */
public class AdminProductPage extends javax.swing.JFrame {
	
	ProductService productService = new ProductService();
	Utils utils = new Utils();
	String imagePath = null;
	int currentActiveProductPosition = 0;

	/**
	 * Creates new form AdminProductPage
	 */
	public AdminProductPage() {
		initComponents();
		displayProductsInProductsTable();
	}

	public Connection getConnection() {
		Connection conn = null;
		String dbName = "manage_coffee_chain";
		String dbUser = "root";
		String dbPassword = "thang123";

		try {
			conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/" + dbName, dbUser, dbPassword);
			System.out.println("DB Connected");
		} catch (SQLException ex) {
			System.out.println("Error sql: " + ex);
			System.out.println("DB Connected");

			return null;
		}

		return conn;
	}

	public void clearTableData(DefaultTableModel model) {
		model.setRowCount(0);
	}
	
	public void clearCurrentProductDisplay() {
		productIdTextField.setText("");
		productNameTextField.setText("");
		productPriceTextField.setText("");
		productAddDateTextField.setDate(null);
		imageLabel.setIcon(null);
	}

	public void displayProductsInProductsTable() {
		ArrayList<Product> products = productService.getProducts();
		DefaultTableModel model = (DefaultTableModel) productsTable.getModel();
		
		if (model.getRowCount() != 0) {
			clearTableData(model);
		}

		for (Product product: products) {
			Object[] rowData = { product.getId(), product.getName(), product.getPrice(), product.getAddDate() };
			model.addRow(rowData);
		}
	}
	
	public void displayASpecificProduct(int index) {
		ArrayList<Product> products = productService.getProducts();
		
		productIdTextField.setText(String.valueOf(products.get(index).getId()));
		productNameTextField.setText(String.valueOf(products.get(index).getName()));
		productPriceTextField.setText(String.valueOf(products.get(index).getPrice()));
		
		try {
			Date addDate = null;
			addDate = new SimpleDateFormat("dd-MM-yyyy").parse(String.valueOf(products.get(index).getAddDate()));
			productAddDateTextField.setDate(addDate);
		} catch (ParseException ex) {
			System.out.println("Exception here: " + ex);
		}
		
		imageLabel.setIcon(utils.resizeImage(null, products.get(index).getImage(), imageLabel));
	}

	public boolean checkInputs() {
		boolean isAtLeastOneInvalidField = productNameTextField.getText() == null
			|| productPriceTextField.getText() == null
			|| productAddDateTextField.getDate() == null;

		if (isAtLeastOneInvalidField) {
			return false;
		}

		try {
			Float.parseFloat(productPriceTextField.getText());
			return true;
		} catch (Exception ex) {
			return false;
		}
	}

	/**
	 * This method is called from within the constructor to initialize the
	 * form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                jPanel1 = new javax.swing.JPanel();
                jLabel1 = new javax.swing.JLabel();
                jLabel2 = new javax.swing.JLabel();
                jLabel3 = new javax.swing.JLabel();
                jLabel4 = new javax.swing.JLabel();
                jLabel5 = new javax.swing.JLabel();
                productIdTextField = new javax.swing.JTextField();
                productNameTextField = new javax.swing.JTextField();
                productPriceTextField = new javax.swing.JTextField();
                productAddDateTextField = new com.toedter.calendar.JDateChooser();
                imageLabel = new javax.swing.JLabel();
                jScrollPane1 = new javax.swing.JScrollPane();
                productsTable = new javax.swing.JTable();
                jButton1 = new javax.swing.JButton();
                chooseImageButton = new javax.swing.JButton();
                jButton4 = new javax.swing.JButton();
                jButton5 = new javax.swing.JButton();
                jButton6 = new javax.swing.JButton();
                jButton7 = new javax.swing.JButton();
                jButton8 = new javax.swing.JButton();
                jButton9 = new javax.swing.JButton();

                setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

                jPanel1.setBackground(new java.awt.Color(255, 255, 204));

                jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
                jLabel1.setText("ID");

                jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
                jLabel2.setText("Hình ảnh");

                jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
                jLabel3.setText("Tên sản phẩm");

                jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
                jLabel4.setText("Giá");

                jLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
                jLabel5.setText("Ngày tạo");

                productAddDateTextField.setDateFormatString("dd-MM-yyyy");

                imageLabel.setBackground(new java.awt.Color(204, 255, 255));
                imageLabel.setOpaque(true);

                productsTable.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {

                        },
                        new String [] {
                                "ID", "Tên sản phẩm", "Giá", "Ngày tạo"
                        }
                ));
                productsTable.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                productsTableMouseClicked(evt);
                        }
                });
                jScrollPane1.setViewportView(productsTable);

                jButton1.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
                jButton1.setText("Cuối cùng");
                jButton1.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                lastProductActionPerformed(evt);
                        }
                });

                chooseImageButton.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
                chooseImageButton.setText("Chọn hình ảnh");
                chooseImageButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                chooseImageButtonActionPerformed(evt);
                        }
                });

                jButton4.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
                jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/managecoffeechain/images/new product.png"))); // NOI18N
                jButton4.setText("Thêm");
                jButton4.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                addProductActionPerformed(evt);
                        }
                });

                jButton5.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
                jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/managecoffeechain/images/view edit delete product.png"))); // NOI18N
                jButton5.setText("Sửa");
                jButton5.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                updateProductActionPerformed(evt);
                        }
                });

                jButton6.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
                jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/managecoffeechain/images/delete.png"))); // NOI18N
                jButton6.setText("Xoá");
                jButton6.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                deleteProductActionPerformed(evt);
                        }
                });

                jButton7.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
                jButton7.setText("Đầu tiên");
                jButton7.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                firstProductActionPerformed(evt);
                        }
                });

                jButton8.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
                jButton8.setText("Tiếp theo");
                jButton8.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                nextProductActionPerformed(evt);
                        }
                });

                jButton9.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
                jButton9.setText("Phìa trước");
                jButton9.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                previousProductActionPerformed(evt);
                        }
                });

                javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
                jPanel1.setLayout(jPanel1Layout);
                jPanel1Layout.setHorizontalGroup(
                        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addComponent(jLabel3)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(productNameTextField))
                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(jLabel4)
                                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                                        .addComponent(jLabel1)
                                                                        .addGap(132, 132, 132)
                                                                        .addComponent(productIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addComponent(jLabel5)
                                                                                .addComponent(jLabel2))
                                                                        .addGap(65, 65, 65)
                                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addComponent(productAddDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addComponent(productPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addComponent(chooseImageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 591, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(45, Short.MAX_VALUE))
                );
                jPanel1Layout.setVerticalGroup(
                        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jLabel1)
                                                        .addComponent(productIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel3)
                                                        .addComponent(productNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel4)
                                                        .addComponent(productPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(30, 30, 30)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(productAddDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel5))
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addGap(18, 18, 18)
                                                                .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addGap(80, 80, 80)
                                                                .addComponent(jLabel2)))
                                                .addGap(18, 18, 18)
                                                .addComponent(chooseImageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(50, 50, 50)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(70, Short.MAX_VALUE))
                );

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                );

                pack();
        }// </editor-fold>//GEN-END:initComponents

    private void lastProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastProductActionPerformed
	    currentActiveProductPosition = productService.getProducts().size() - 1;
	    displayASpecificProduct(currentActiveProductPosition);
    }//GEN-LAST:event_lastProductActionPerformed

    private void addProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProductActionPerformed
	    if (checkInputs() && imagePath != null) {
		    try {
			    Connection conn = getConnection();
			    String sql = "INSERT INTO products (name, price, add_date, image) VALUES(?, ?, ?, ?)";
			    PreparedStatement ps = conn.prepareStatement(sql);

			    ps.setString(1, productNameTextField.getText());
			    ps.setString(2, productPriceTextField.getText());
			    SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
			    String addDate = dateFormat.format(productAddDateTextField.getDate());
			    ps.setString(3, addDate);
			    InputStream image = null;
			    try {
				    image = new FileInputStream(new File(imagePath));
			    } catch (FileNotFoundException ex) {
				    System.out.println("Exeception here: " + ex);
			    }
			    ps.setBlob(4, image);
			    ps.executeUpdate();
			    displayProductsInProductsTable();

			    JOptionPane.showMessageDialog(null, "Thêm sản phẩm thành công");
		    } catch (SQLException ex) {
			    System.out.println("Exception here: " + ex);
		    }
	    } else {
		    JOptionPane.showMessageDialog(null, "Một hoặc nhiều field bị thiếu. Bạn vui long hãy xem lại");
	    }
    }//GEN-LAST:event_addProductActionPerformed

    private void updateProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateProductActionPerformed
	    if (checkInputs() && productIdTextField.getText() != null) {
		    String updateQuery = null;
		    PreparedStatement ps = null;
		    Connection conn = getConnection();

		    // Update without image
		    if (imagePath == null) {
			    try {
				    updateQuery = "UPDATE products SET name = ?, price = ?, add_date = ? WHERE id = ?";
				    ps = conn.prepareStatement(updateQuery);
				    ps.setString(1, productNameTextField.getText());
				    ps.setString(2, productPriceTextField.getText());

				    SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
				    String addDate = dateFormat.format(productAddDateTextField.getDate());

				    ps.setString(3, addDate);
				    ps.setInt(4, Integer.parseInt(productIdTextField.getText()));
				    ps.executeUpdate();
				    
				    displayProductsInProductsTable();
				    JOptionPane.showMessageDialog(null, "Cập nhật sản phẩm thành công");
			    } catch (SQLException ex) {
				    System.out.println("Exception here: " + ex);
			    }
		    } // Update with image
		    else {
			    try {
				    InputStream image = null;
				    try {
					    image = new FileInputStream(new File(imagePath));
				    } catch (FileNotFoundException ex) {
					    System.err.println("Exception here: " + ex);
				    }

				    updateQuery = "UPDATE products SET name = ?, price = ?, add_date = ?, image = ? WHERE id = ?";
				    ps = conn.prepareStatement(updateQuery);
				    ps.setString(1, productNameTextField.getText());
				    ps.setString(2, productPriceTextField.getText());

				    SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
				    String addDate = dateFormat.format(productAddDateTextField.getDate());

				    ps.setString(3, addDate);
				    ps.setBlob(4, image);
				    ps.setInt(5, Integer.parseInt(productIdTextField.getText()));
				    ps.executeUpdate();
				    
				    displayProductsInProductsTable();
				    JOptionPane.showMessageDialog(null, "Cập nhật sản phẩm thành công");
			    } catch (SQLException ex) {
				    JOptionPane.showMessageDialog(null, ex.getMessage());
			    }
		    }

	    } else {
		    JOptionPane.showMessageDialog(null, "Một hoặc nhiều field bị thiếu. Bạn vui long hãy xem lại");
	    }
    }//GEN-LAST:event_updateProductActionPerformed

    private void deleteProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteProductActionPerformed
	    boolean isProductIdEmpty = productIdTextField.getText().equals("");

	    if (!isProductIdEmpty) {
		    String updateQuery = null;
		    PreparedStatement ps = null;
		    Connection conn = getConnection();

		    try {
			    updateQuery = "DELETE FROM products WHERE id = ?";
			    ps = conn.prepareStatement(updateQuery);
			    ps.setInt(1, Integer.parseInt(productIdTextField.getText()));
			    ps.executeUpdate();
			    
			    JOptionPane.showMessageDialog(null, "Xoá sản phẩm thành công");
			    
			    displayProductsInProductsTable();
			    clearCurrentProductDisplay();
		    } catch (SQLException ex) {
			    JOptionPane.showMessageDialog(null, ex.getMessage());
			    JOptionPane.showMessageDialog(null, "Xoá sản phẩm không thành công");
		    }
	    } else {
		    JOptionPane.showMessageDialog(null, "Xoá sản phẩm không thành công, vui lòng nhập mã sản phẩm để xoá");
	    }
    }//GEN-LAST:event_deleteProductActionPerformed

    private void firstProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstProductActionPerformed
	    currentActiveProductPosition = 0;
	    displayASpecificProduct(currentActiveProductPosition);
    }//GEN-LAST:event_firstProductActionPerformed

    private void nextProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextProductActionPerformed
	    currentActiveProductPosition++;
	    int totalProducts = productService.getProducts().size();
	    if (currentActiveProductPosition >= totalProducts) {
		    currentActiveProductPosition = totalProducts - 1;
	    }
	    
	    displayASpecificProduct(currentActiveProductPosition);
    }//GEN-LAST:event_nextProductActionPerformed

    private void previousProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousProductActionPerformed
	    currentActiveProductPosition--;
	    if (currentActiveProductPosition < 0) {
		    currentActiveProductPosition = 0;
	    }
	    
	    displayASpecificProduct(currentActiveProductPosition);
    }//GEN-LAST:event_previousProductActionPerformed

    private void chooseImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseImageButtonActionPerformed
	    JFileChooser file = new JFileChooser();
	    file.setCurrentDirectory(new File(System.getProperty("user.home")));
	    FileNameExtensionFilter filter = new FileNameExtensionFilter("*.images", "jpg", "png");

	    int result = file.showSaveDialog(null);
	    boolean isApproveChooseImage = result == JFileChooser.APPROVE_OPTION;
	    if (isApproveChooseImage) {
		    File selectedFile = file.getSelectedFile();
		    String path = selectedFile.getAbsolutePath();
		    Utils utils = new Utils();
		    imageLabel.setIcon(utils.resizeImage(path, null, imageLabel));
		    imagePath = path;
	    } else {
		    System.out.println("Chưa có file nào được chọn");
	    }
    }//GEN-LAST:event_chooseImageButtonActionPerformed

        private void productsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productsTableMouseClicked
		int index = productsTable.getSelectedRow();
		displayASpecificProduct(index);
        }//GEN-LAST:event_productsTableMouseClicked

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(AdminProductPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(AdminProductPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(AdminProductPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(AdminProductPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new AdminProductPage().setVisible(true);
			}
		});
	}

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JButton chooseImageButton;
        private javax.swing.JLabel imageLabel;
        private javax.swing.JButton jButton1;
        private javax.swing.JButton jButton4;
        private javax.swing.JButton jButton5;
        private javax.swing.JButton jButton6;
        private javax.swing.JButton jButton7;
        private javax.swing.JButton jButton8;
        private javax.swing.JButton jButton9;
        private javax.swing.JLabel jLabel1;
        private javax.swing.JLabel jLabel2;
        private javax.swing.JLabel jLabel3;
        private javax.swing.JLabel jLabel4;
        private javax.swing.JLabel jLabel5;
        private javax.swing.JPanel jPanel1;
        private javax.swing.JScrollPane jScrollPane1;
        private com.toedter.calendar.JDateChooser productAddDateTextField;
        private javax.swing.JTextField productIdTextField;
        private javax.swing.JTextField productNameTextField;
        private javax.swing.JTextField productPriceTextField;
        private javax.swing.JTable productsTable;
        // End of variables declaration//GEN-END:variables
}
